[{"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\index.js":"1","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\Routes.js":"2","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\Signup.js":"3","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\Signin.js":"4","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\AdminDashboard.js":"5","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\UserDashboard.js":"6","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\Profile.js":"7","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\userFAQ.js":"8","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Shop.js":"9","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\userFeedback.js":"10","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Home.js":"11","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Product.js":"12","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\auth\\PrivateRoute.js":"13","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Cart.js":"14","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\auth\\AdminRoute.js":"15","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\admin\\ManageProducts.js":"16","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\admin\\AddProduct.js":"17","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\admin\\UpdateProduct.js":"18","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\admin\\AddCategory.js":"19","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\admin\\Orders.js":"20","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\admin\\AdminFAQ.js":"21","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\admin\\adminFeedback.js":"22","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Layout.js":"23","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\apiUser.js":"24","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\apiCore.js":"25","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Card.js":"26","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Checkbox.js":"27","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\RadioBox.js":"28","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Search.js":"29","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\fixedPrices.js":"30","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\auth\\index.js":"31","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Checkout.js":"32","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\cartHelpers.js":"33","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\admin\\apiAdmin.js":"34","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\config.js":"35","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Menu.js":"36","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\ShowImage.js":"37","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\FeedbackTable.js":"38","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\FaqTable.js":"39","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\ForgotPassword.js":"40"},{"size":160,"mtime":1613488048000,"results":"41","hashOfConfig":"42"},{"size":2622,"mtime":1613883823327,"results":"43","hashOfConfig":"42"},{"size":5326,"mtime":1613882143353,"results":"44","hashOfConfig":"42"},{"size":2507,"mtime":1613883933207,"results":"45","hashOfConfig":"42"},{"size":2988,"mtime":1613488048000,"results":"46","hashOfConfig":"42"},{"size":4383,"mtime":1613488048000,"results":"47","hashOfConfig":"42"},{"size":2549,"mtime":1613546876776,"results":"48","hashOfConfig":"42"},{"size":967,"mtime":1613792625061,"results":"49","hashOfConfig":"42"},{"size":4206,"mtime":1613488048000,"results":"50","hashOfConfig":"42"},{"size":2665,"mtime":1613789541417,"results":"51","hashOfConfig":"42"},{"size":1904,"mtime":1613488048000,"results":"52","hashOfConfig":"42"},{"size":2045,"mtime":1613488048000,"results":"53","hashOfConfig":"42"},{"size":456,"mtime":1613488048000,"results":"54","hashOfConfig":"42"},{"size":2315,"mtime":1613488048000,"results":"55","hashOfConfig":"42"},{"size":489,"mtime":1613529217338,"results":"56","hashOfConfig":"42"},{"size":2863,"mtime":1613488048000,"results":"57","hashOfConfig":"42"},{"size":5977,"mtime":1613488048000,"results":"58","hashOfConfig":"42"},{"size":6619,"mtime":1613488048000,"results":"59","hashOfConfig":"42"},{"size":2380,"mtime":1613488048000,"results":"60","hashOfConfig":"42"},{"size":5446,"mtime":1613488048000,"results":"61","hashOfConfig":"42"},{"size":426,"mtime":1613880066050,"results":"62","hashOfConfig":"42"},{"size":1655,"mtime":1613618563158,"results":"63","hashOfConfig":"42"},{"size":439,"mtime":1613488048000,"results":"64","hashOfConfig":"42"},{"size":1507,"mtime":1613618763920,"results":"65","hashOfConfig":"42"},{"size":3086,"mtime":1613548640595,"results":"66","hashOfConfig":"42"},{"size":3570,"mtime":1613488048000,"results":"67","hashOfConfig":"42"},{"size":960,"mtime":1613488048000,"results":"68","hashOfConfig":"42"},{"size":573,"mtime":1613488048000,"results":"69","hashOfConfig":"42"},{"size":3892,"mtime":1613488048000,"results":"70","hashOfConfig":"42"},{"size":544,"mtime":1613488048000,"results":"71","hashOfConfig":"42"},{"size":1592,"mtime":1613912649213,"results":"72","hashOfConfig":"42"},{"size":4458,"mtime":1613488048000,"results":"73","hashOfConfig":"42"},{"size":1934,"mtime":1613488048000,"results":"74","hashOfConfig":"42"},{"size":5505,"mtime":1613792774364,"results":"75","hashOfConfig":"42"},{"size":49,"mtime":1613488048000,"results":"76","hashOfConfig":"42"},{"size":3085,"mtime":1613488048000,"results":"77","hashOfConfig":"42"},{"size":392,"mtime":1613488048000,"results":"78","hashOfConfig":"42"},{"size":833,"mtime":1613545060713,"results":"79","hashOfConfig":"42"},{"size":4603,"mtime":1613792787352,"results":"80","hashOfConfig":"42"},{"size":5714,"mtime":1613912996500,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"ws6igi",{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"84"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\index.js",[],["185","186"],"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\Routes.js",["187","188"],"import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Signup from \"./user/Signup\";\nimport Signin from \"./user/Signin\";\nimport Home from \"./core/Home\";\nimport PrivateRoute from \"./auth/PrivateRoute\";\nimport AdminRoute from \"./auth/AdminRoute\";\nimport Dashboard from \"./user/UserDashboard\";\nimport AdminDashboard from \"./user/AdminDashboard\";\nimport AddCategory from \"./admin/AddCategory\";\nimport AddProduct from \"./admin/AddProduct\";\nimport Orders from \"./admin/Orders\";\nimport Shop from \"./core/Shop\";\nimport Product from \"./core/Product\";\nimport Cart from \"./core/Cart\";\nimport Profile from \"./user/Profile\";\nimport ManageProducts from \"./admin/ManageProducts\";\nimport UpdateProduct from \"./admin/UpdateProduct\";\nimport FAQ from \"./user/userFAQ\";\nimport Feedback from \"./user/userFeedback\";\nimport AdminFAQ from \"./admin/AdminFAQ\";\nimport userFAQ from \"./user/userFAQ\";\nimport userFeedback from \"./user/userFeedback\";\nimport adminFeedback from \"./admin/adminFeedback\";\nimport ForgotPassword from \"./user/ForgotPassword\";\n\nconst Routes = () => {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t<Route path=\"/shop\" exact component={Shop} />\n\t\t\t\t<Route path=\"/signin\" exact component={Signin} />\n\t\t\t\t<Route path=\"/signup\" exact component={Signup} />\n\t\t\t\t<Route path=\"/forgot\" exact component={ForgotPassword} />\n\t\t\t\t<Route path=\"/product/:productId\" exact component={Product} />\n\t\t\t\t<PrivateRoute\n\t\t\t\t\tpath=\"/user/dashboard\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={Dashboard}\n\t\t\t\t/>\n\t\t\t\t<AdminRoute\n\t\t\t\t\tpath=\"/admin/dashboard\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={AdminDashboard}\n\t\t\t\t/>\n\t\t\t\t<AdminRoute\n\t\t\t\t\tpath=\"/create/category\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={AddCategory}\n\t\t\t\t/>\n\t\t\t\t<AdminRoute\n\t\t\t\t\tpath=\"/create/product\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={AddProduct}\n\t\t\t\t/>\n\t\t\t\t<AdminRoute path=\"/admin/orders\" exact component={Orders} />\n\t\t\t\t<Route path=\"/cart\" exact component={Cart} />\n\t\t\t\t<Route path=\"/user/userFAQ\" exact component={userFAQ} />\n\t\t\t\t<AdminRoute path=\"/admin/AdminFAQ\" exact component={AdminFAQ} />\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/user/userFeedback\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={userFeedback}\n\t\t\t\t/>\n\t\t\t\t<AdminRoute\n\t\t\t\t\tpath=\"/admin/adminFeedback\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={adminFeedback}\n\t\t\t\t/>\n\t\t\t\t<PrivateRoute\n\t\t\t\t\tpath=\"/profile/:userId\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={Profile}\n\t\t\t\t/>\n\t\t\t\t<AdminRoute\n\t\t\t\t\tpath=\"/admin/products\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={ManageProducts}\n\t\t\t\t/>\n\t\t\t\t<AdminRoute\n\t\t\t\t\tpath=\"/admin/product/update/:productId\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={UpdateProduct}\n\t\t\t\t/>\n\t\t\t</Switch>\n\t\t</BrowserRouter>\n\t);\n};\n\nexport default Routes;\n","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\Signup.js",[],"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\Signin.js",[],"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\AdminDashboard.js",["189"],"import React from 'react';\nimport Layout from '../core/Layout';\nimport {isAuthenticated} from '../auth';\nimport {Link} from 'react-router-dom';\n\nconst AdminDashboard = () => {\n    const {user: {_id, name, email, role}} = isAuthenticated()\n    const adminLinks = () => {\n        return (\n            <div className = \"card\">\n                <h4 className = \"card-header\">Admin Links</h4>\n                <ul className = \"list-group\">\n                    <li className = \"list-group-item\">\n                        <Link className = \"nav-link\" to = \"/create/category\">\n                            Create Category\n                        </Link>               \n                    </li>\n                    <li className = \"list-group-item\">\n                        <Link className = \"nav-link\" to = \"/create/product\">\n                            Create Product\n                        </Link>                    \n                    </li>\n                    <li className = \"list-group-item\">\n                        <Link className = \"nav-link\" to = \"/admin/products\">\n                            Manage Products\n                        </Link>                    \n                    </li>\n                    <li className = \"list-group-item\">\n                        <Link className = \"nav-link\" to = \"/admin/orders\">\n                            View Orders\n                        </Link>                    \n                    </li>\n                    <li className = \"list-group-item\">\n                        <Link className = \"nav-link\" to = \"/admin/adminFeedback\">\n                           Review Feedbacks\n                        </Link>                    \n                    </li>\n                    <li className = \"list-group-item\">\n                        <Link className = \"nav-link\" to = \"/admin/adminFAQ\">\n                            Update FAQs\n                        </Link>                    \n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    const adminInfo = () => {\n        return (\n            <div className = \"card mb-5\">\n                <h3 className = \"card-header\">\n                    User Information\n                </h3>\n                <ul className = \"list-group\">\n                    <li className = \"list-group-item\">{name}</li>\n                    <li className = \"list-group-item\">{email}</li>\n                    <li className = \"list-group-item\">{role === 1 ? 'Administrator' : 'Registered User'}</li>\n                </ul>\n            </div>\n        );\n    };\n\n    return (\n        <Layout title = \"Dashboard\" description = {`Welcome back, ${name}!`}\n        className = \"container-fluid\">\n            \n        <div className = \"row\">\n            <div className = \"col-3\">\n                {adminLinks()}\n            </div>\n\n            <div className = \"col-9\">\n                {adminInfo()}\n            </div>\n        </div>\n            \n        </Layout>\n    );\n};\n\nexport default AdminDashboard;","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\UserDashboard.js",["190"],"import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport {isAuthenticated} from '../auth';\nimport {Link} from 'react-router-dom';\nimport {getPurchaseHistory} from './apiUser';\nimport moment from 'moment';\n\nconst Dashboard = () => {\n\n    const [history, setHistory] = useState([]);\n\n    const {user: {_id, name, email, role}} = isAuthenticated();\n\n    const token = isAuthenticated().token;\n\n    const init = (userId, token) => {\n        getPurchaseHistory(userId, token)\n            .then(data => {\n                if (data.error) {\n                    console.log(data.error);\n                }\n                else {\n                    setHistory(data);\n                }\n            });\n    };\n\n    useEffect(() => {\n        init(_id, token);\n    }, []);\n\n    const userLinks = () => {\n        return (\n            <div className = \"card\">\n                <h4 className = \"card-header\">User Links</h4>\n                <ul className = \"list-group\">\n                    <li className = \"list-group-item\">\n                        <Link className = \"nav-link\" to = \"/cart\">\n                            My Cart\n                        </Link>               \n                    </li>\n                    <li className = \"list-group-item\">\n                        <Link className = \"nav-link\" to = {`/profile/${_id}`}>\n                            Update Profile</Link>                    \n                    </li>\n                    <li className = \"list-group-item\">\n                        <Link className = \"nav-link\" to = \"/user/userFAQ\">\n                            View FAQs\n                        </Link>                    \n                    </li>\n                    <li className = \"list-group-item\">\n                        <Link className = \"nav-link\" to = \"/user/userFeedback\">\n                           Submit/View Feedbacks\n                        </Link>                    \n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    const userInfo = () => {\n        return (\n            <div className = \"card mb-5\">\n                <h3 className = \"card-header\">\n                    User Information\n                </h3>\n                <ul className = \"list-group\">\n                    <li className = \"list-group-item\">{name}</li>\n                    <li className = \"list-group-item\">{email}</li>\n                    <li className = \"list-group-item\">{role === 1 ? 'Administrator' : 'Registered User'}</li>\n                </ul>\n            </div>\n        );\n    };\n\n    const purchaseHistory = (history) => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">Purchase history</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        {history.map((h, i) => {\n                            return (\n                                <div>\n                                    <hr />\n                                    {h.products.map((p, i) => {\n                                        return (\n                                            <div key={i}>\n                                                <h6>Product name: {p.name}</h6>\n                                                <h6>Product price: ${p.price}</h6>\n                                                <h6>\n                                                    Purchased date:{\" \"}\n                                                    {moment(p.createdAt).fromNow()}\n                                                </h6>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n\n    return (\n        <Layout title = \"Dashboard\" description = {`Welcome back, ${name}!`}\n        className = \"container-fluid\">\n            \n        <div className = \"row\">\n            <div className = \"col-3\">\n                {userLinks()}\n            </div>\n\n            <div className = \"col-9\">\n                {userInfo()}\n                {purchaseHistory(history)}\n            </div>\n        </div>\n            \n        </Layout>\n    );\n};\n\nexport default Dashboard;","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\Profile.js",["191","192","193","194"],"import React, { useState, useEffect, useImperativeHandle } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { read, update, updateUser } from \"./apiUser\";\n\nconst Profile = ({ match }) => {\n\tconst [values, setValues] = useState({\n\t\tname: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t\terror: false,\n\t\tsuccess: false,\n\t});\n\n\tconst { token } = isAuthenticated();\n\n\tconst { name, email, password, error, success } = values;\n\n\tconst init = (userId) => {\n\t\tread(userId, token).then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tsetValues({ ...values, error: true });\n\t\t\t} else {\n\t\t\t\tsetValues({ ...values, name: data.name, email: data.email });\n\t\t\t}\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tinit(match.params.userId);\n\t}, []);\n\n\tconst handleChange = (name) => (e) => {\n\t\tsetValues({ ...values, error: false, [name]: e.target.value });\n\t};\n\n\tconst clickSubmit = (e) => {\n\t\te.preventDefault();\n\t\tupdate(match.params.userId, token, { name, email, password }).then(\n\t\t\t(data) => {\n\t\t\t\tif (data.error) {\n\t\t\t\t\tconsole.log(data.error);\n\t\t\t\t} else {\n\t\t\t\t\tupdateUser(data, () => {\n\t\t\t\t\t\tsetValues({\n\t\t\t\t\t\t\t...values,\n\t\t\t\t\t\t\tname: data.name,\n\t\t\t\t\t\t\temail: data.email,\n\t\t\t\t\t\t\tsuccess: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\n\tconst redirectUser = (success) => {\n\t\tif (success) {\n\t\t\treturn <Redirect to=\"/cart\" />;\n\t\t}\n\t};\n\n\tconst profileUpdate = (name, email, password) => {\n\t\treturn (\n\t\t\t<form>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label className=\"text-muted\">Name</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={handleChange(\"name\")}\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label className=\"text-muted\">Email</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tonChange={handleChange(\"email\")}\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label className=\"text-muted\">Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tonChange={handleChange(\"name\")}\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<button className=\"btn btn-primary\" onClick={clickSubmit}>\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t);\n\t};\n\n\treturn (\n\t\t<Layout\n\t\t\ttitle=\"Update Profile\"\n\t\t\tdescription=\"Update your profile here\"\n\t\t\tclassName=\"container-fluid\"\n\t\t>\n\t\t\t<h2 className=\"mb-4\">Profile Update</h2>\n\t\t\t{profileUpdate(name, email, password)}\n\t\t\t{redirectUser(success)}\n\t\t\t{JSON.stringify(values)}\n\t\t</Layout>\n\t);\n};\n\nexport default Profile;\n","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\userFAQ.js",["195","196"],"/* eslint-disable react-hooks/rules-of-hooks */\nimport Layout from \"../core/Layout\";\nimport { useState, useEffect } from \"react\";\nimport { Collapse } from \"antd\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { getFaq } from \"../admin/apiAdmin\";\n\nconst { Panel } = Collapse;\n\nconst userFAQ = () => {\n\tconst [faq, setFaq] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchFaq = async () => {\n\t\t\tconst res = await getFaq();\n\t\t\tconst { data: result } = res;\n\t\t\tsetFaq(result.result);\n\t\t};\n\n\t\tfetchFaq();\n\n\t\treturn () => {\n\t\t\tsetFaq([]);\n\t\t};\n\t}, []);\n\n\tconst renderFaq = () => {\n\t\treturn faq.map((item) => (\n\t\t\t<Panel header={item.title} key={item.id}>\n\t\t\t\t<p>{item.content}</p>\n\t\t\t</Panel>\n\t\t));\n\t};\n\n\treturn (\n\t\t<Layout\n\t\t\ttitle=\"FAQS\"\n\t\t\tdescription={`Frequently Asked Questions`}\n\t\t\tclassName=\"container-fluid\"\n\t\t>\n\t\t\t<Collapse defaultActiveKey={[\"0\"]}>{renderFaq()}</Collapse>\n\t\t</Layout>\n\t);\n};\n\nexport default userFAQ;\n","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Shop.js",["197","198","199","200"],"import React, {useState, useEffect} from 'react';\nimport Layout from './Layout';\nimport {getCategories, getFilteredProducts} from './apiCore';\nimport Card from './Card';\nimport Checkbox from './Checkbox';\nimport RadioBox from './RadioBox';\nimport {prices} from './fixedPrices';\n\nconst Shop = () => {\n    const [categories, setCategories] = useState([]);\n    const [error, setError] = useState(false);\n    const [myFilters, setMyFilters] = useState({\n        filters: {\n            category: [],\n            price: []\n        }\n    });\n    const [limit, setLimit] = useState(6);\n    const [skip, setSkip] = useState(0);\n    const [size, setSize] = useState(0);\n    const [filteredResults, setFilteredResults] = useState([]);\n\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setError(data.error);\n            }\n            else {\n                setCategories(data);\n            }\n        })\n    };\n\n    const loadFilteredResults = (newFilters) => {\n        getFilteredProducts(skip, limit, newFilters)\n            .then (data => {\n                if (data.error) {\n                    setError(data.error);\n                }\n                else {\n                    setFilteredResults(data.data);\n                    setSize(data.size);\n                    setSkip(0);\n                }\n            });\n    };\n\n    const loadMore = () => {\n        let toSkip = skip + limit;\n        getFilteredProducts(toSkip, limit, myFilters.filters)\n            .then (data => {\n                if (data.error) {\n                    setError(data.error);\n                }\n                else {\n                    setFilteredResults([...filteredResults,...data.data]);\n                    setSize(data.size);\n                    setSkip(toSkip);\n                }\n            });\n    };\n\n    const loadMoreButton = () => {\n        return (\n            size > 0 && size >= limit && (\n                <button onClick = {loadMore} className = \"btn btn-warning mb-5\">Load More...</button>\n            )\n        );\n    };\n\n    useEffect(() => {\n        init();\n        loadFilteredResults(skip, limit, myFilters.filters);\n    }, []);\n\n    const handleFilters = (filters, filterBy) => {\n        const newFilters = {...myFilters};\n        newFilters.filters[filterBy] = filters;\n\n        if (filterBy == \"price\") {\n            let priceValues = handlePrice(filters);\n            newFilters.filters[filterBy] = priceValues;\n        }\n\n        loadFilteredResults(myFilters.filters);\n        setMyFilters(newFilters);\n    };\n\n    const handlePrice = value => {\n        const data = prices;\n        let array = [];\n        for (let key in data) {\n            if (data[key]._id === parseInt(value)) {\n                array = data[key].array;\n            }\n        }\n        return array;\n    };\n\n    \n\n    return (\n        <Layout title = \"Shop Now\" \n        description = \"DLVL Studios Official Website\"\n        className = \"container\">\n            <div className = \"row\">\n                <div className = \"col-4\">\n                <h4>Filter by categories</h4>\n                    <ul>\n                        <Checkbox categories = {categories} \n                        handleFilters = {filters =>\n                            handleFilters(filters,'category')}/>\n                    </ul>\n\n                <h4>Filter by Price Range</h4>\n                <div>\n                    <RadioBox prices = {prices} \n                    handleFilters = {filters =>\n                        handleFilters(filters,'price')}/>\n                </div>\n                \n                </div>\n\n                <div className = \"col-8\">\n                    <h2 className = \"mb-4\">Products</h2>\n                    <div className = \"row\">\n                        {filteredResults.map((product, i) => (\n                            <div key = {i} className = \"col-4 mb-3\">\n                                <Card  product = {product}/>\n                            </div>\n                        ))}\n                    </div>\n                    <hr/>\n                    {loadMoreButton()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\n\nexport default Shop;\n\n","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\userFeedback.js",[],"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Home.js",["201"],"import React, {useState, useEffect} from 'react';\nimport Layout from './Layout';\nimport {getProducts} from './apiCore';\nimport Card from './Card';\nimport Search from './Search';\n\nconst Home = () => {\n    const [productsBySell, setProductsBySell] = useState([]);\n    const [productsByArrival, setProductsByArrival] = useState([]);\n    const [error, setError] = useState(false);\n\n\n    const loadProductsBySell = () => {\n        getProducts('sold')\n            .then(data => {\n                if (data.error) {\n                    setError(data.error);\n                }\n                else {\n                    setProductsBySell(data);\n                }\n            })\n    }\n\n    const loadProductsByArrival = () => {\n        getProducts('createdAt')\n            .then(data => {\n                if (data.error) {\n                    setError(data.error);\n                }\n                else {\n                    setProductsByArrival(data);\n                }\n            })\n    }\n\n    useEffect(() => {\n        loadProductsByArrival();\n        loadProductsBySell();\n    }, []);\n\n\n    return (\n        <Layout title = \"Home Page\" \n        description = \"DLVL Studios Official Website\"\n        className = \"container\">\n            <Search/>\n            \n            <h2 className = \"mb-4\">New Arrivals</h2>\n            <div className = \"row\">\n            {productsByArrival.map((product,i) => (\n                <div key = {i} className = \"col-4 mb-3\">\n                <Card  product = {product}/>\n                </div>\n            ))}\n            </div>\n\n            <h2 className = \"mb-4\">Best Sellers</h2>\n            <div className = \"row\">\n            {productsBySell.map((product,i) => (\n                <div key = {i} className = \"col-4 mb-3\">\n                <Card  product = {product}/>\n                </div>\n            ))}\n            </div>\n        </Layout>\n    );\n};\n\nexport default Home;","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Product.js",["202"],"import React, {useState, useEffect} from 'react';\nimport Layout from './Layout';\nimport {read, listRelated} from './apiCore';\nimport Card from './Card';\n\nconst Product = (props) => {\n    const [product, setProduct] = useState({});\n    const [relatedProduct, setRelatedProduct] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadSingleProduct = productId => {\n        read(productId)\n            .then(data => {\n                if (data.error) {\n                    setError(data.error);\n                }\n                else {\n                    setProduct(data);\n                    listRelated(data._id)\n                        .then(data => {\n                            if (data.error) {\n                                setError(data.error);\n                            }\n                            else {\n                                setRelatedProduct(data);\n                            }\n                        });\n                }\n            });\n    };\n\n    useEffect(() => {  \n        const productId = props.match.params.productId;\n        loadSingleProduct(productId);\n    }, [props]);\n\n    return (\n        <Layout title = {product && product.name}\n        description = {product && product.description && product.description.substring(0,100)}\n        className = \"container-fluid\">\n            <div className = \"row\">\n                <div className = \"col-8\">\n                    {product && \n                    product.description && \n                    product.description.substring(0,100)\n                    && <Card product = {product} showViewProductButton={false}/>}\n                </div>\n                <div className =\"col-4\">\n                    <h4>Related Products</h4>\n                    {relatedProduct.map((p, i) => (\n                        <div className = \"mb-3\">\n                            <Card key = {i} product = {p}/>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </Layout>\n    );\n\n};\n\nexport default Product;","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\auth\\PrivateRoute.js",["203"],"import {React, Component} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {isAuthenticated} from './index';\n\nconst PrivateRoute = ({component: Component, ...rest}) => (\n    <Route {...rest} \n    render = {props => \n        isAuthenticated() ? (\n        <Component {...props} />\n    ) : (\n        <Redirect to = {{pathname: '/signin', \n            state: {from: props.location}\n        }} />\n    )} />\n);\n\nexport default PrivateRoute;","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Cart.js",["204","205","206"],"import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport Layout from './Layout';\nimport Card from './Card';\nimport {getCart, removeItem, emptyCart} from './cartHelpers';\nimport Checkout from './Checkout';\n\nconst Cart = () => {\n    const [items, setItems] = useState([]);\n    const [run, setRun] = useState(false);\n    useEffect(() => {\n        setItems(getCart());\n      }, [run]);\n\n    const showItems = items => {\n        return (\n            <div>\n                <h2>Your cart has {items.length} item{items.length == 1 ? '' : 's'}</h2>\n                <hr/>\n                    <div className = \"col-5\">\n                    {items.map((product, i) => (\n                        <div className=\"mb-3\" key={i}>\n                            <Card  \n                            product={product} \n                            showAddToCartButton = {false} \n                            cartUpdate = {true}\n                            showRemoveProductButton = {true}\n                            setRun={setRun}\n                            run={run}\n                            />\n                        </div>\n                    ))}\n                    </div>\n            </div>\n        );\n    }\n\n    const noItemsMessage = () => (\n        <h2>\n            Your cart is empty. <br/>\n            <Link to = \"/shop\">Continue shopping</Link>\n        </h2>\n    );\n\n    const showCheckoutColumn = () => {\n        return (\n            <span>\n            <h2 className = \"mb-4\">Your cart summary</h2>\n            <hr/>\n            <Checkout products = {items} setRun={setRun} run={run}/>\n            </span>\n        )\n    };\n\n    return (\n        <Layout title = \"Shopping Cart\" \n        description = \"Manage your Cart here\"\n        className = \"container-fluid\">\n\n            <div className = \"row\">\n                <div className = \"col-6\">\n                    {items.length > 0 ? \n                        showItems(items) :\n                        noItemsMessage()}\n                </div>\n\n                <div className = \"col-6\">\n                    {items.length > 0 ? showCheckoutColumn() : (\n                        <h2>Nothing to check out here...</h2>\n                    )}\n                </div>\n            </div>\n\n        </Layout>\n    );\n    \n};\n\n\n\nexport default Cart;","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\auth\\AdminRoute.js",["207"],"import { React, Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./index\";\n\nconst AdminRoute = ({ component: Component, ...rest }) => (\n\t<Route\n\t\t{...rest}\n\t\trender={(props) =>\n\t\t\tisAuthenticated() && isAuthenticated().user.role === 1 ? (\n\t\t\t\t<Component {...props} />\n\t\t\t) : (\n\t\t\t\t<Redirect\n\t\t\t\t\tto={{\n\t\t\t\t\t\tpathname: \"/signin\",\n\t\t\t\t\t\tstate: { from: props.location },\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t/>\n);\n\nexport default AdminRoute;\n","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\admin\\ManageProducts.js",["208"],"import React, {useState, useEffect} from 'react';\nimport Layout from '../core/Layout';\nimport {isAuthenticated} from '../auth';\nimport {Link} from 'react-router-dom';\nimport {getProducts, deleteProduct} from './apiAdmin';\n\nconst ManageProducts = () => {\n    const [products, setProducts] = useState([]);\n    const {user, token} = isAuthenticated();\n\n    const loadProducts = () => {\n        getProducts()\n            .then(data => {\n                if (data.error) {\n                    console.log(data.error);\n                }\n                else {\n                    setProducts(data);\n                    console.log(\"Products loaded\");  \n                }\n            });\n        };\n\n    const destroy = productId => {\n        deleteProduct(productId, user._id, token)\n            .then(data => {\n                if (data.error) {\n                    console.log(data.error);\n                }\n                else {\n                    loadProducts();   \n                }\n            })\n    };\n    \n    useEffect(() => {\n        loadProducts();\n    },[]);\n\n    const showProducts = () => {\n        return (\n            <div>\n                <table className = \"table table-striped\">\n            <thead className = \"thead-dark\">\n                <tr>\n                <th scope=\"col\">Products (Total: {products.length})</th>\n                <th scope=\"col\">Update</th>\n                <th scope=\"col\">Delete</th>\n                </tr>\n            </thead>\n            <tbody>\n                {products.map((product, i) => (\n                    <tr key = {i}>\n                        <td>\n                            {product.name}\n                        </td>\n                        <td>\n                            <Link to = {`/admin/product/update/${product._id}`}>\n                                    <span className = \"badge badge-warning badge-pill\">\n                                        Update\n                                    </span>\n                                </Link>\n                        </td>\n                        <td>\n                            <button onClick = {() => destroy(product._id)} className = \"badge badge-danger badge-pill\">\n                                        Delete\n                            </button>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n            </table>\n            </div>\n        );\n    };\n\n    return (\n        <Layout title = \"Manage Products\" \n        description = \"Modify or Remove Products Here\"\n        className = \"container-fluid\">\n\n            <div className = \"row\">\n                <div className = \"col-12\">\n                <h2 className = \"text-center\"></h2>  \n                {showProducts()}\n                    <hr/>\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default ManageProducts;\n\n","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\admin\\AddProduct.js",["209","210","211","212","213"],"import React, {useState, useEffect} from 'react';\nimport Layout from '../core/Layout';\nimport {isAuthenticated} from '../auth';\nimport {Link} from 'react-router-dom';\nimport {createProduct, getCategories} from './apiAdmin';\n\nconst AddProduct = () => {\n    const {user, token} = isAuthenticated();\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        category: '',\n        shipping: '',\n        quantity: '',\n        photo: '',\n        loading: false,\n        error: '',\n        createdProduct: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const {\n        name,\n        description,\n        price,\n        categories,\n        category,\n        shipping,\n        quantity,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData\n    } = values;\n\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({...values, error:data.error});\n            }\n            else {\n                setValues({...values, categories: data, formData: new FormData()});\n            }\n        })\n    };\n\n    useEffect(() => {\n        init();\n    },[]);\n\n    const handleChange = (name) => event => {\n        const value = name === 'photo' ? \n            event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({...values, [name]: value});\n    };\n\n    const clickSubmit = (event) => {\n        event.preventDefault();\n        setValues({...values, error: '', loading: true});\n        createProduct(user._id, token, formData)\n            .then(data => {\n                if(data.error) {\n                    setValues({...values, error: true, loading: false});\n                }\n                else {\n                    setValues({\n                        ...values,\n                        name: '',\n                        description: '',\n                        photo: '',\n                        price: '',\n                        quantity: '',\n                        error: false,\n                        loading: false,\n                        createdProduct: data.name\n                    });\n                }\n            });\n    };\n\n    const newPostForm = () => (\n        <form className = \"mb-3\" onSubmit={clickSubmit}>\n            <h4>Import Photo</h4>\n            <div className = \"form-group\">\n                <label className = \"btn btn-secondary\">\n                <input onChange = {handleChange('photo')} type = \"file\" name = \"photo\" accept = \"image/*\"/>\n                </label>\n            </div>\n\n            <div className = \"form-group\">\n                <label className = \"text-muted\">\n                    Name\n                </label>\n                <input onChange = {handleChange('name')} type = \"text\" className = \"form-control\" value = {name}/>\n            </div>\n\n            <div className = \"form-group\">\n                <label className = \"text-muted\">\n                    Description\n                </label>\n                <textarea onChange = {handleChange('description')} className = \"form-control\" value = {description}/>\n            </div>\n\n            <div className = \"form-group\">\n                <label className = \"text-muted\">\n                    Price\n                </label>\n                <input onChange = {handleChange('price')} type = \"number\" className = \"form-control\" value = {price}/>\n            </div>\n\n            <div className = \"form-group\">\n                <label className = \"text-muted\">\n                    Category\n                </label>\n                <select onChange = {handleChange('category')}  className = \"form-control\">\n                    <option disabled selected hidden>Please select...</option>\n                    {categories && categories.map((c, i) => (\n                        <option key = {i }value = {c._id}>{c.name}</option>\n                    ))}\n                </select>\n            </div>\n\n            <div className = \"form-group\">\n                <label className = \"text-muted\">\n                    Shipping\n                </label>\n                <select onChange = {handleChange('shipping')}  className = \"form-control\">\n                    <option disabled selected hidden>Please select...</option>\n                    <option value = \"1\">Available</option>\n                    <option value = \"0\">Not Available</option>\n                </select>\n            </div>\n\n            <div className = \"form-group\">\n                <label className = \"text-muted\">\n                    Quantity\n                </label>\n                <input onChange = {handleChange('quantity')} type = \"number\" className = \"form-control\" value = {quantity}/>\n            </div>\n\n            <button className = \"btn btn-outline-primary\">Create Product</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className = \"alert alert-danger\" style = {{display: error ? '' : 'none'}}>\n            <h5>\n                Insufficient Details! Please review your input and try again.\n            </h5>\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className = \"alert alert-success\" style = {{display: createdProduct ? '' : 'none'}}>\n            <h5>{createdProduct} is successfully created!</h5>\n        </div>\n    );\n\n    const showLoading = () => (\n        loading && (<div className = \"alert alert-info\">\n            <h5>Loading...</h5>\n        </div>)\n    );\n\n    return (\n        <Layout title = \"Create a new Product\" description = {`Ready to add a new product, ${user.name}!`}>\n            \n        <div className = \"row\">\n            <div className = \"col-md-8 offset-md-2\">\n                {showLoading()}\n                {showSuccess()}\n                {showError()}\n                {newPostForm()}\n            </div>\n        </div>\n            \n        </Layout>        \n    );\n};\n\nexport default AddProduct;\n","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\admin\\UpdateProduct.js",["214","215","216","217"],"import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { getProduct, getCategories, updateProduct } from './apiAdmin';\n\nconst UpdateProduct = ({ match }) => {\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        category: '',\n        shipping: '',\n        quantity: '',\n        photo: '',\n        loading: false,\n        error: false,\n        createdProduct: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n    const [categories, setCategories] = useState([]);\n\n    const { user, token } = isAuthenticated();\n    const {\n        name,\n        description,\n        price,\n        // categories,\n        category,\n        shipping,\n        quantity,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData\n    } = values;\n\n    const init = productId => {\n        getProduct(productId).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                // populate the state\n                setValues({\n                    ...values,\n                    name: data.name,\n                    description: data.description,\n                    price: data.price,\n                    category: data.category._id,\n                    shipping: data.shipping,\n                    quantity: data.quantity,\n                    formData: new FormData()\n                });\n                // load categories\n                initCategories();\n            }\n        });\n    };\n\n    // load categories and set form data\n    const initCategories = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setCategories(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.productId);\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        updateProduct(match.params.productId, user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: '',\n                    description: '',\n                    photo: '',\n                    price: '',\n                    quantity: '',\n                    loading: false,\n                    error: false,\n                    redirectToProfile: true,\n                    createdProduct: data.name\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Description</label>\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Price</label>\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\">\n                    <option>Please select</option>\n                    {categories &&\n                        categories.map((c, i) => (\n                            <option key={i} value={c._id}>\n                                {c.name}\n                            </option>\n                        ))}\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Shipping</label>\n                <select onChange={handleChange('shipping')} className=\"form-control\">\n                    <option>Please select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Update Product</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\n            <h2>{`${createdProduct}`} is updated!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    const redirectUser = () => {\n        if (redirectToProfile) {\n            if (!error) {\n                return <Redirect to=\"/admin/products\" />;\n            }\n        }\n    };\n\n    return (\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                    {redirectUser()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default UpdateProduct;\n","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\admin\\AddCategory.js",[],"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\admin\\Orders.js",["218","219"],"import React, {useState, useEffect} from 'react';\nimport Layout from '../core/Layout';\nimport {isAuthenticated} from '../auth';\nimport {Link} from 'react-router-dom';\nimport {listOrders, getStatusValues, updateOrderStatus} from './apiAdmin';\nimport moment from 'moment';\n\nconst Orders = () => {\n    const [orders, setOrders] = useState([]);\n    const [statusValues, setstatusValues] = useState([]);\n\n    const {user, token} = isAuthenticated();\n\n    const loadOrders = () => {\n        listOrders(user._id, token)\n            .then(data => {\n                if (data.error) {\n                    console.log(data.error);\n                }\n                else {\n                    setOrders(data);\n                }\n            });\n    };\n\n    const loadStatusValues = () => {\n        getStatusValues(user._id, token)\n            .then(data => {\n                if (data.error) {\n                    console.log(data.error);\n                }\n                else {\n                    setstatusValues(data);\n                }\n            });\n    };\n\n    useEffect(() => {\n        loadOrders();\n        loadStatusValues();\n    },[]);\n\n    const showOrdersLength = () => {\n        if (orders.length > 0) {\n            return (\n                <h1 className = \"text-danger display-2\">\n                    Total orders: {orders.length}\n                </h1>\n            );\n        } \n        else {\n            return (\n                <h1 className = \"text-danger display-2\">\n                    No Orders\n                </h1>\n            );\n        }\n    };\n\n    const showInput = (key, value) => (\n        <div className = \"input-group mb-2 mr-sm-2\">\n            <div className = \"input-group-prepend\">\n                <div className = \"input-group-text\">\n                    {key}\n                </div>\n                <input type = \"text\" value = {value} className = \"form-control\" readOnly/>\n            </div>\n        </div>\n    );\n\n    const handleStatusChange = (e, orderId) => {\n        updateOrderStatus(user._id, token, orderId, e.target.value)\n            .then(data => {\n                if (data.error) {\n                    console.log('Status update failed');\n                }\n                else {\n                    loadOrders();\n                }\n            })\n    };\n\n    const showStatus = (o) => (\n        <div className = \"form-group\">\n            <h3 className = \"mark mb-4\">\n                Status: {o.status}\n            </h3>\n                <select className = \"form-control\" \n                onChange = {(e) => handleStatusChange(e, o._id)}>\n                    <option hidden disabled selected>Update Status</option>\n                    {statusValues.map((status, index) => (\n                        <option key = {index} value = {status}>\n                            {status}\n                        </option>\n                    ))}\n                </select>\n        </div>\n    );\n\n    return (\n        <Layout title = \"Customer Orders\" description = {`${user.name}, time to manage your orders!`}>\n            \n        <div className = \"row\">\n            <div className = \"col-md-8 offset-md-2\">\n                {showOrdersLength()}\n                {orders.map((o, oIndex) => {\n                    return (\n                        <div className = \"mt-5\" key = {oIndex} style ={{borderBottom: '5px solid indigo'}}>\n                            <h5 className = \"mb-5\">\n                                <span className = \"bg-primary\">\n                                    Order ID: {o._id}\n                                </span>\n                            </h5>\n                            <ul className = \"list-group mb-2\">\n                                <li className = \"list-group-item\">\n                                    {showStatus(o)}\n                                </li>\n                                <li className = \"list-group-item\">\n                                    Amount: &#8369;{o.amount}\n                                </li>\n                                <li className = \"list-group-item\">\n                                    Ordered by: {o.user.name}\n                                </li>\n                                <li className = \"list-group-item\">\n                                    Order Date: {moment(o.createdAt).fromNow()}\n                                </li>\n                                <li className = \"list-group-item\">\n                                    Delivery Address: {o.address}\n                                </li>\n                            </ul>\n                            <h3 className = \"mt-4 mb-4 font-italic\">\n                                Total Products Ordered: {o.products.length}\n                            </h3>\n\n                            {o.products.map((p, pIndex) => (\n                                    <div className = \"mb-4\" key = {pIndex} style={{padding: '20px', border: '1px solid indigo'}}>\n                                        {showInput('Name', p.name)}\n                                        {showInput('Price', p.price)}\n                                        {showInput('Count', p.count)}\n                                        {showInput('Product ID', p._id)}\n                                    </div>\n                            ))}\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n            \n        </Layout>        \n    );\n\n};\n\nexport default Orders;","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\admin\\AdminFAQ.js",["220"],"import Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport React, { useState } from \"react\";\nimport FaqTable from \"../core/FaqTable\";\n\nconst AdminFAQ = () => {\n\tconst {\n\t\tuser: { name },\n\t} = isAuthenticated();\n\n\treturn (\n\t\t<Layout\n\t\t\ttitle=\"FAQs\"\n\t\t\tdescription={` ${name}, Please Edit the FAQS here`}\n\t\t\tclassName=\"container-fluid\"\n\t\t>\n\t\t\t<FaqTable />\n\t\t</Layout>\n\t);\n};\nexport default AdminFAQ;\n","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\admin\\adminFeedback.js",["221"],"/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport FeedbackTable from \"../core/FeedbackTable\";\nimport { isAuthenticated } from \"../auth\";\nimport {\n\tgetPendingFeedback,\n\tupdateFeedback,\n\tdeleteFeedback,\n} from \"../admin/apiAdmin\";\n\nconst adminFeedback = () => {\n\tconst [feedback, setFeedback] = useState([]);\n\tconst { token } = isAuthenticated();\n\n\tconst filterFeedback = (filter) => {\n\t\tif (feedback.length > 0) {\n\t\t\tconst filtered = feedback.filter((item) => item.key !== filter);\n\t\t\tsetFeedback(filtered);\n\t\t}\n\t};\n\n\tconst handleUpdate = (feedbackId) => {\n\t\tconsole.log(feedbackId, \"update\");\n\t\tupdateFeedback(feedbackId, token);\n\t\tfilterFeedback(feedbackId);\n\t};\n\n\tconst handleDelete = (feedbackId) => {\n\t\tconsole.log(feedbackId, \"delete\");\n\t\tdeleteFeedback(feedbackId, token);\n\t\tfilterFeedback(feedbackId);\n\t};\n\n\tuseEffect(() => {\n\t\tconst fetchFeedback = async () => {\n\t\t\tconst { result } = await getPendingFeedback(token);\n\t\t\tconsole.log(result);\n\n\t\t\tconst responseFeedback = result.map((item) => ({\n\t\t\t\tkey: item._id,\n\t\t\t\tname: item.user.name,\n\t\t\t\tcontent: item.content,\n\t\t\t\tstatus: \"Pending\",\n\t\t\t}));\n\n\t\t\tsetFeedback(responseFeedback);\n\t\t};\n\n\t\tfetchFeedback();\n\n\t\treturn () => {\n\t\t\tsetFeedback(null);\n\t\t};\n\t}, []);\n\n\tconst {\n\t\tuser: { name },\n\t} = isAuthenticated();\n\n\treturn (\n\t\t<Layout\n\t\t\ttitle=\"Feedbacks\"\n\t\t\tdescription={` ${name}, Please review the feedbacks here`}\n\t\t\tclassName=\"container-fluid\"\n\t\t>\n\t\t\t<FeedbackTable\n\t\t\t\tdata={feedback}\n\t\t\t\tonUpdate={handleUpdate}\n\t\t\t\tonDelete={handleDelete}\n\t\t\t/>\n\t\t</Layout>\n\t);\n};\n\nexport default adminFeedback;\n","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Layout.js",[],"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\apiUser.js",[],"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\apiCore.js",[],"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Card.js",[],"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Checkbox.js",["222"],"import React, {useState, useEffect} from 'react';\n\nconst Checkbox = ({categories, handleFilters}) => {\n    const [checked, setChecked] = useState([]);\n\n    const handleToggle = c => () => {\n        const currentCategoryId = checked.indexOf(c);\n        const newCheckedCategoryId = [...checked]\n        if (currentCategoryId === -1) {\n            newCheckedCategoryId.push(c);\n        }\n        else {\n            newCheckedCategoryId.splice(currentCategoryId, 1);\n        }\n        console.log(newCheckedCategoryId);\n        setChecked(newCheckedCategoryId);\n        handleFilters(newCheckedCategoryId);\n    };\n\n    return categories.map((c,i) => (\n        <li key = {i} className = \"list-unstyled\">\n            <input onChange = {handleToggle(c._id)} value = {checked.indexOf(c._id === -1)} type = \"checkbox\" className = \"form-check-input\"/>\n            <label className = \"form-check-label\">{c.name}</label>\n        </li>\n    ));\n};\n\nexport default Checkbox;","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\RadioBox.js",["223","224","225"],"import React, {useState, useEffect, Fragment} from 'react';\n\nconst RadioBox = ({prices, handleFilters}) => {\n    const [value, setValue] = useState(0);\n\n    const handleChange = (event) => {\n        handleFilters(event.target.value);\n        setValue(event.target.value);\n    };\n\n    return prices.map((p,i) => (\n        <div key = {i}>\n            <input name = {p} onChange = {handleChange} value = {`${p._id}`} type = \"radio\" className = \"mr-2 ml-4\"/>\n            <label className = \"form-check-label\">{p.name}</label>\n        </div>\n    ));\n};\n\nexport default RadioBox;","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Search.js",[],"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\fixedPrices.js",[],"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\auth\\index.js",[],"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Checkout.js",["226"],"import React, {useState, useEffect} from 'react';\nimport {isAuthenticated} from '../auth';\nimport {Link} from 'react-router-dom';\nimport {createOrder} from './apiCore';\nimport {emptyCart} from './cartHelpers';\n\nconst Checkout = ({products,setRun = f => f, run = undefined}) => {\n    const [data, setData] = useState({\n        loading: false,\n        success: false,\n        error: '',\n        address: ''\n    });\n\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n    const handleAddress = event => {\n        setData({...data, address: event.target.value});\n    }\n\n    const getTotal = () => {\n        return products.reduce((currentValue, nextValue) => {\n            return currentValue + (nextValue.count * nextValue.price);\n        },0);\n    };\n\n    let delivery_address = data.address;\n\n    const submitOrder = () => {\n        setData({\n            loading: true\n        });\n        const amount = getTotal();\n        const createOrderData = {\n            products: products,\n            amount: amount,\n            address: delivery_address\n        }\n\n        console.log(createOrderData);\n        \n        createOrder(userId, token, createOrderData);\n        setRun(!run);\n        emptyCart(() => {\n                setData({\n                    loading: false,\n                    success: true\n                });\n        });\n        alert(\"Order has been successfully placed! Please check your mail to confirm your order. Make sure to keep in touch with us for the transaction!\");\n        console.log('payment success and empty cart');\n    };\n\n    const showError = error => (\n        <div className = \"alert alert-danger\" \n        style = {{display: error ? '' : 'none'}}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = success => (\n        <div className = \"alert alert-success\" \n        style = {{display: success ? '' : 'none'}}>\n            Order has been successfully placed! Please check your mail to confirm your order. Make sure to keep in touch with us for the transaction!\n        </div>\n    );\n\n    const showLoading = (loading) => (\n        loading && <h2>Loading</h2>\n    )\n\n    //onBlur = {() => setData({...data, error: ''})}\n\n    const showCheckout = () => {\n        return isAuthenticated() ? (\n                <form onSubmit = {submitOrder}>\n                <div className = \"gorm-group mb-3\">\n                <label className = \"text-muted\">Delivery Address <b>(required)</b>:</label>\n                <textarea onChange = {handleAddress}\n                    className = \"form-control\"\n                    value = {data.address}\n                    placeholder = \"Enter your delivery address here...\"\n                    required\n                />\n                </div>\n                <button type = \"submit\" className = \"btn btn-success btn-block\" >Submit Order</button>\n                </form>\n            ):(\n                <Link to = \"/signin\">\n                    <button className = \"btn btn-primary\">Sign in to Checkout</button>\n                </Link>\n            );\n    };\n\n    const showSummaryBreakdown = () => {\n        return (\n            <div>\n                <table className = \"table table-striped\">\n            <thead className = \"thead-dark\">\n                <tr>\n                <th scope=\"col\">Product Name</th>\n                <th scope=\"col\">Quantity</th>\n                <th scope=\"col\">Price</th>\n                </tr>\n            </thead>\n            <tbody>\n            {products.map((product, i) => (\n                <tr key = {i}>\n                    <td>\n                        {product.name}\n                    </td>\n                    <td>\n                        <b>{product.count}</b>\n                    </td>\n                    <td>\n                        &#8369;{product.count * product.price}\n                    </td>\n                </tr>\n            ))}\n            <tr>\n                <td>&nbsp;</td>\n                <td>Total:</td>\n                <td><b>&#8369;{getTotal()}</b></td>\n            </tr>\n            </tbody>\n            </table>\n            </div>\n        )\n      \n    };\n\n    return (\n        <div>\n            {products.length > 0 ? showSummaryBreakdown() : null}\n            {showLoading(data.loading)}\n            {showError(data.error)}\n            {showSuccess(data.success)}\n            {showCheckout()}\n        </div>\n    )\n};\n\nexport default Checkout;","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\cartHelpers.js",["227","228"],"export const addItem = (item, next) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n        cart.push({\n            ...item, \n            count: 1\n        });\n        cart = Array.from(new Set(cart.map((p) => (p._id)))).map(id => {\n            return cart.find(p => p._id === id);\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n        next(); \n    }\n}; \n\nexport const itemTotal = () => {\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart')).length;\n        }\n        return 0;\n    }\n};\n\nexport const getCart = () => {\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart'));\n        }\n        return [];\n    }\n};\n\nexport const updateItem = (productId, count) => {\n    let cart = [];\n    if (typeof window != 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n    }\n\n    cart.map((product,i) => {\n        if (product._id === productId) {\n            cart[i].count = count;\n        }\n    });\n\n    localStorage.setItem('cart', JSON.stringify(cart));\n};\n\nexport const removeItem = (productId) => {\n    let cart = [];\n    if (typeof window != 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n    }\n\n    cart.map((product,i) => {\n        if (product._id === productId) {\n            cart.splice(i, 1);\n        }\n    });\n\n    localStorage.setItem('cart', JSON.stringify(cart));\n    return cart;\n};\n\nexport const emptyCart = (next) => {\n    if (typeof window != 'undefined') {\n        localStorage.removeItem('cart');\n        next();\n    }\n};","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\admin\\apiAdmin.js",[],"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\config.js",[],"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\Menu.js",["229"],"import React, {Fragment} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {isAuthenticated, signout} from '../auth';\nimport {itemTotal} from './cartHelpers';\nconst isActive = (history, path) => {\n    if(history.location.pathname === path) {\n        return {\n            color: '#ffffff'\n        };\n    }\n    else {\n        return {\n            color: '#000000'\n        };\n    };\n};\n\nconst Menu = ({history}) => (\n    <div>\n        <ul className=\"nav nav-tabs bg-primary\">\n            <li className = \"nav-item\">\n                <Link className = \"nav-link\" style = {isActive(history, '/')} to = \"/\">Home</Link>\n            </li>\n\n            <li className = \"nav-item\">\n                <Link className = \"nav-link\" style = {isActive(history, '/shop')} to = \"/shop\">Shop</Link>\n            </li>\n\n            <li className = \"nav-item\">\n                <Link className = \"nav-link\" style = {isActive(history, '/cart')} to = \"/cart\">Cart {itemTotal() == 0 ? `` : (<sup><small className = \"cart-badge\">{itemTotal()}</small></sup>)} </Link>\n            </li>\n\n            <li className = \"nav-item\">\n                <Link className = \"nav-link\" style = {isActive(history, '/user/userFAQ')} to = \"/user/userFAQ\">FAQs</Link>\n            </li>\n                \n            <li className = \"nav-item\">\n                <Link className = \"nav-link\" style = {isActive(history, '/user/userFeedback')} to = \"/user/userFeedback\">Feedbacks</Link>\n            </li>\n\n            {isAuthenticated() && isAuthenticated().user.role === 0 && (\n                <li className = \"nav-item\">\n                <Link className = \"nav-link\" style = {isActive(history, '/user/dashboard')} to = \"/user/dashboard\">Dashboard</Link>\n                </li>\n            )}\n\n            {isAuthenticated() && isAuthenticated().user.role === 1 && (\n                <li className = \"nav-item\">\n                <Link className = \"nav-link\" style = {isActive(history, '/admin/dashboard')} to = \"/admin/dashboard\">Dashboard</Link>\n                </li>\n            )}\n            \n            {!isAuthenticated() && (\n                   <Fragment>\n                        <li className = \"nav-item\">\n                            <Link className = \"nav-link\" style = {isActive(history, '/signin')} to = \"/signin\">Signin</Link>\n                        </li>\n\n                        <li className = \"nav-item\">\n                         <Link className = \"nav-link\" style = {isActive(history, '/signup')} to = \"/signup\">Signup</Link>\n                        </li>\n                   </Fragment> \n            )}\n            \n           \n           {isAuthenticated() && (\n                <li className = \"nav-item\">\n                <span className = \"nav-link\" \n                style = {{cursor: 'pointer', color: '#ffffff'}} \n                onClick = {() => signout(\n                    () => {\n                        history.push('/');\n                    }\n                )}\n                >Sign Out</span>\n            </li> \n           )}\n        </ul>\n    </div>\n);\n\n\nexport default withRouter(Menu);","C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\ShowImage.js",[],"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\FeedbackTable.js",[],"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\core\\FaqTable.js",[],"C:\\Users\\Brando Endona\\Desktop\\web\\DLVL-main\\ecommerce-front\\src\\user\\ForgotPassword.js",["230","231","232"],{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":19,"column":8,"nodeType":"239","messageId":"240","endLine":19,"endColumn":11},{"ruleId":"237","severity":1,"message":"241","line":20,"column":8,"nodeType":"239","messageId":"240","endLine":20,"endColumn":16},{"ruleId":"237","severity":1,"message":"242","line":7,"column":19,"nodeType":"239","messageId":"240","endLine":7,"endColumn":22},{"ruleId":"243","severity":1,"message":"244","line":30,"column":8,"nodeType":"245","endLine":30,"endColumn":10,"suggestions":"246"},{"ruleId":"237","severity":1,"message":"247","line":1,"column":38,"nodeType":"239","messageId":"240","endLine":1,"endColumn":57},{"ruleId":"237","severity":1,"message":"248","line":4,"column":10,"nodeType":"239","messageId":"240","endLine":4,"endColumn":14},{"ruleId":"237","severity":1,"message":"249","line":18,"column":33,"nodeType":"239","messageId":"240","endLine":18,"endColumn":38},{"ruleId":"243","severity":1,"message":"250","line":32,"column":5,"nodeType":"245","endLine":32,"endColumn":7,"suggestions":"251"},{"ruleId":"237","severity":1,"message":"252","line":5,"column":10,"nodeType":"239","messageId":"240","endLine":5,"endColumn":25},{"ruleId":"237","severity":1,"message":"248","line":6,"column":10,"nodeType":"239","messageId":"240","endLine":6,"endColumn":14},{"ruleId":"237","severity":1,"message":"249","line":11,"column":12,"nodeType":"239","messageId":"240","endLine":11,"endColumn":17},{"ruleId":"237","severity":1,"message":"253","line":18,"column":19,"nodeType":"239","messageId":"240","endLine":18,"endColumn":27},{"ruleId":"243","severity":1,"message":"254","line":74,"column":8,"nodeType":"245","endLine":74,"endColumn":10,"suggestions":"255"},{"ruleId":"256","severity":1,"message":"257","line":80,"column":22,"nodeType":"258","messageId":"259","endLine":80,"endColumn":24},{"ruleId":"237","severity":1,"message":"249","line":10,"column":12,"nodeType":"239","messageId":"240","endLine":10,"endColumn":17},{"ruleId":"237","severity":1,"message":"249","line":9,"column":12,"nodeType":"239","messageId":"240","endLine":9,"endColumn":17},{"ruleId":"237","severity":1,"message":"260","line":1,"column":16,"nodeType":"239","messageId":"240","endLine":1,"endColumn":25},{"ruleId":"237","severity":1,"message":"261","line":5,"column":18,"nodeType":"239","messageId":"240","endLine":5,"endColumn":28},{"ruleId":"237","severity":1,"message":"262","line":5,"column":30,"nodeType":"239","messageId":"240","endLine":5,"endColumn":39},{"ruleId":"256","severity":1,"message":"257","line":18,"column":68,"nodeType":"258","messageId":"259","endLine":18,"endColumn":70},{"ruleId":"237","severity":1,"message":"260","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":26},{"ruleId":"263","severity":1,"message":"264","line":84,"column":17,"nodeType":"265","endLine":84,"endColumn":47},{"ruleId":"237","severity":1,"message":"248","line":4,"column":9,"nodeType":"239","messageId":"240","endLine":4,"endColumn":13},{"ruleId":"237","severity":1,"message":"266","line":30,"column":9,"nodeType":"239","messageId":"240","endLine":30,"endColumn":17},{"ruleId":"237","severity":1,"message":"267","line":31,"column":9,"nodeType":"239","messageId":"240","endLine":31,"endColumn":17},{"ruleId":"237","severity":1,"message":"268","line":36,"column":9,"nodeType":"239","messageId":"240","endLine":36,"endColumn":26},{"ruleId":"243","severity":1,"message":"269","line":53,"column":7,"nodeType":"245","endLine":53,"endColumn":9,"suggestions":"270"},{"ruleId":"237","severity":1,"message":"248","line":4,"column":10,"nodeType":"239","messageId":"240","endLine":4,"endColumn":14},{"ruleId":"237","severity":1,"message":"266","line":31,"column":9,"nodeType":"239","messageId":"240","endLine":31,"endColumn":17},{"ruleId":"237","severity":1,"message":"267","line":32,"column":9,"nodeType":"239","messageId":"240","endLine":32,"endColumn":17},{"ruleId":"243","severity":1,"message":"271","line":76,"column":8,"nodeType":"245","endLine":76,"endColumn":10,"suggestions":"272"},{"ruleId":"237","severity":1,"message":"248","line":4,"column":9,"nodeType":"239","messageId":"240","endLine":4,"endColumn":13},{"ruleId":"243","severity":1,"message":"273","line":41,"column":7,"nodeType":"245","endLine":41,"endColumn":9,"suggestions":"274"},{"ruleId":"237","severity":1,"message":"275","line":3,"column":17,"nodeType":"239","messageId":"240","endLine":3,"endColumn":25},{"ruleId":"243","severity":1,"message":"276","line":55,"column":5,"nodeType":"245","endLine":55,"endColumn":7,"suggestions":"277"},{"ruleId":"237","severity":1,"message":"278","line":1,"column":26,"nodeType":"239","messageId":"240","endLine":1,"endColumn":35},{"ruleId":"237","severity":1,"message":"278","line":1,"column":26,"nodeType":"239","messageId":"240","endLine":1,"endColumn":35},{"ruleId":"237","severity":1,"message":"279","line":1,"column":37,"nodeType":"239","messageId":"240","endLine":1,"endColumn":45},{"ruleId":"237","severity":1,"message":"280","line":4,"column":12,"nodeType":"239","messageId":"240","endLine":4,"endColumn":17},{"ruleId":"237","severity":1,"message":"278","line":1,"column":26,"nodeType":"239","messageId":"240","endLine":1,"endColumn":35},{"ruleId":"281","severity":1,"message":"282","line":46,"column":26,"nodeType":"283","messageId":"284","endLine":46,"endColumn":28},{"ruleId":"281","severity":1,"message":"282","line":63,"column":26,"nodeType":"283","messageId":"284","endLine":63,"endColumn":28},{"ruleId":"256","severity":1,"message":"257","line":30,"column":114,"nodeType":"258","messageId":"259","endLine":30,"endColumn":116},{"ruleId":"237","severity":1,"message":"285","line":25,"column":3,"nodeType":"239","messageId":"240","endLine":25,"endColumn":19},{"ruleId":"237","severity":1,"message":"286","line":40,"column":8,"nodeType":"239","messageId":"240","endLine":40,"endColumn":19},{"ruleId":"237","severity":1,"message":"287","line":203,"column":8,"nodeType":"239","messageId":"240","endLine":203,"endColumn":19},"no-native-reassign",["288"],"no-negated-in-lhs",["289"],"no-unused-vars","'FAQ' is defined but never used.","Identifier","unusedVar","'Feedback' is defined but never used.","'_id' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_id' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["290"],"'useImperativeHandle' is defined but never used.","'Link' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'init' and 'match.params.userId'. Either include them or remove the dependency array.",["291"],"'isAuthenticated' is defined but never used.","'setLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit', 'loadFilteredResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.",["292"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Component' is defined but never used.","'removeItem' is defined but never used.","'emptyCart' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["293"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.productId'. Either include them or remove the dependency array.",["294"],"React Hook useEffect has missing dependencies: 'loadOrders' and 'loadStatusValues'. Either include them or remove the dependency array.",["295"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["296"],"'useEffect' is defined but never used.","'Fragment' is defined but never used.","'value' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'confirm_password' is assigned a value but never used.","'clickSubmit' is assigned a value but never used.","'step2Submit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},"Update the dependencies array to be: [_id, token]",{"range":"311","text":"312"},"Update the dependencies array to be: [init, match.params.userId]",{"range":"313","text":"314"},"Update the dependencies array to be: [limit, loadFilteredResults, myFilters.filters, skip]",{"range":"315","text":"316"},"Update the dependencies array to be: [init]",{"range":"317","text":"318"},"Update the dependencies array to be: [init, match.params.productId]",{"range":"319","text":"320"},"Update the dependencies array to be: [loadOrders, loadStatusValues]",{"range":"321","text":"322"},"Update the dependencies array to be: [token]",{"range":"323","text":"324"},[793,795],"[_id, token]",[789,791],"[init, match.params.userId]",[2176,2178],"[limit, loadFilteredResults, myFilters.filters, skip]",[1245,1247],"[init]",[2088,2090],"[init, match.params.productId]",[1129,1131],"[loadOrders, loadStatusValues]",[1309,1311],"[token]"]